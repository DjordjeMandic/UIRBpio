; PlatformIO Project Configuration File
; ======================================
; This file defines the configuration for the PlatformIO project for the Universal IR Blaster (UIRB).
; It includes general project settings, environment-specific configurations, and custom scripts.
;
; The configurations include:
; - A default environment for building and uploading to UIRB hardware with the urboot bootloader.
; - A simulation and debugging environment using SimAVR.
; - A serial debugging environment with avr-stub.
; - An environment for programming the UIRB using USBasp.
;
; Additional functionality is provided by custom targets for managing EEPROM data:
; - `backupeep`: Backup EEPROM data in both HEX and binary formats.
; - `archiveeep`: Archive all EEPROM backups into a ZIP file.
; - `cleaneep`: Remove empty EEPROM backup directories.

[platformio]
name = UIRB Example Project               ; Project name for identification in PlatformIO
description = Example project demonstrating the setup and use of the Universal IR Blaster (UIRB) with PlatformIO.
default_envs = uirb-v02                   ; Default environment to use for building and uploading

; Common settings shared across all environments
[env]
platform = atmelavr                       ; Specifies the Atmel AVR platform (used for ATmega microcontrollers)
framework = arduino                       ; Utilizes the Arduino framework for development
lib_deps = 
;    djordjemandic/UIRBcorelib @ ^1.0.0   ; UIRBcore library for Universal IR Blaster (UIRB) (GitHub: https://github.com/DjordjeMandic/UIRBcorelib)
monitor_speed = 1000000                   ; Serial monitor communication speed (1M BAUD)
monitor_filters = default, time, colorize ; Serial monitor settings: default behavior, timestamps, and colorized output

; Default environment for the UIRB V0.2 board with urboot bootloader
[env:uirb-v02]
board = uirb-v02-atmega328p               ; Custom board configuration for the UIRB V0.2 hardware with ATmega328P
; upload_speed = 57600                    ; Uncomment if bootloader encounters issues with the default upload speed
extra_scripts = 
    scripts/pio/backup_eeprom.py          ; Custom script to handle EEPROM backup operations:
                                          ; - Adds the `backupeep` target for backing up EEPROM data.
                                          ; - Adds the `archiveeep` target for archiving EEPROM backups to a ZIP file.
                                          ; - Adds the `cleaneep` target for removing empty EEPROM backup directories.

; Environment for simulation and debugging using SimAVR
[env:uirb-v02-simavr]
extends = env:uirb-v02                    ; Inherits common settings from the default UIRB environment
build_type = debug                        ; Specifies build type as debug for debugging capabilities
debug_tool = simavr                       ; Uses SimAVR as the debugging tool for simulating UIRB hardware

; Environment for serial debugging with avr-stub
[env:uirb-v02-avrstub]
extends = env:uirb-v02                    ; Inherits common settings from the default UIRB environment
build_type = debug                        ; Specifies build type as debug for serial debugging
debug_tool = avr-stub                     ; Uses avr-stub for debugging via serial interface
lib_deps = 
    ${env.lib_deps}                       ; Inherits libraries from the common environment
    jdolinay/avr-debugger @ ~1.4          ; Adds the AVR Debugger library for enhanced debugging functionality

; Environment for using USBasp as the programmer
[env:uirb-v02-isp]
extends = env:uirb-v02                    ; Inherits common settings from the default UIRB environment
upload_protocol = usbasp                  ; Sets USBasp as the programmer for uploading firmware
upload_flags =                            ; Additional flags for configuring the USBasp protocol:
  -PUSB                                   ; Specifies USB as the upload port
  -B8                                     ; Reduces SPI clock speed to divide by 8 for stable uploads
